09AB = work  #check money 
09A6 = work #print money after check money
09A9 = need test 


============================================================================================================================
send //
'09AB' => ['banking_check', 'v a4', [qw(len charID)]],

sub banking_check {
	my ($self) = @_;
	my $msg = pack('v a4', 0x09AB, $accountID);
	$self->sendToServer($msg);	
	debug "Checking Money in Bank\n", "sendPacket";
}


#need check 
'09A9' => ['banking_withdraw', 'a4 V', [qw(charID zeny)]],
sub banking_withdraw {
	my ($self) = @_;
	my $msg = pack('a4 V', 0x09A9, $accountID, $zeny); # need add $zeny
	$self->sendToServer($msg);	
	debug "withdraw Money in Bank\n", "sendPacket";
}


============================================================================================================================
recv//
09A6
'09A6' => ['banking_status', 'a8 v' ,[qw(zeny reason)]],

sub banking_status {
    my ($self, $args) = @_;
    $args->{zeny} = getHex($args->{zeny});
    $args->{zeny} = join '', reverse split / /, $args->{zeny};
    $args->{zeny} = hex $args->{zeny};
	
	message TF ("--------------- Bank status ---------------\n"),"info";
	message TF ("Zeny: ".$args->{zeny}."\n");
	message TF ("-------------------------------------------\n"),"info";
}


============================================================================================================================
//commands.pm
sub cmdBank {
    my (undef, $args) = @_;
    my ($arg1, $arg2) = parseArgs($args, 2);
    if (!$net || $net->getState() != Network::IN_GAME || !$char) {
        error TF("You must be logged in the game to use this command\n");
    }
    if ($arg1 eq "check") {
         $messageSender->banking_check(); #send banking_check
        return;
		}	
	} elsif ($args1 eq "withdraw") { #need add command withdraw
	

}